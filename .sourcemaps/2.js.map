{"version":3,"sources":["../../src/pages/reset-password/reset-password.module.ts","../../src/validators/email.ts","../../src/pages/reset-password/reset-password.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACK;AAUrD,IAAa,uBAAuB;IAApC;IAAsC,CAAC;IAAD,8BAAC;AAAD,CAAC;AAA1B,uBAAuB;IARnC,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,0EAAiB;SAClB;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,0EAAiB,CAAC;SAC5C;KACF,CAAC;GACW,uBAAuB,CAAG;AAAH;;;;;;;;;ACVpC;AAAA;IAAA;IAcA,CAAC;IAZQ,sBAAO,GAAd,UAAe,OAAoB;QACjC,IAAM,EAAE,GAAG,4DAA4D,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAE5F,EAAE,CAAC,CAAC,EAAE,CAAC,EAAC;YACN,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAED,MAAM,CAAC;YACL,cAAc,EAAE,IAAI;SACrB,CAAC;IAEJ,CAAC;IACH,qBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;AChByC;AACuC;AACb;AACX;AACD;AAOxD,IAAa,iBAAiB;IAG5B,2BAAmB,OAAqB,EAAS,YAAyB,EACjE,SAAyB,EAAE,WAAuB;QADxC,YAAO,GAAP,OAAO,CAAc;QAAS,iBAAY,GAAZ,YAAY,CAAa;QACjE,cAAS,GAAT,SAAS,CAAgB;QAC9B,IAAI,CAAC,iBAAiB,GAAG,WAAW,CAAC,KAAK,CAAC;YACzC,KAAK,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,OAAO,CAAC,CAAC,kEAAU,CAAC,QAAQ,EAAE,yEAAc,CAAC,OAAO,CAAC,CAAC,CAAC;SAC/E,CAAC,CAAC;IACP,CAAC;IAED,yCAAa,GAAb;QAAA,iBAuBC;QAtBC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAAC;YACjC,OAAO,CAAC,GAAG,CAAC,0CAAwC,IAAI,CAAC,iBAAiB,CAAC,KAAO,CAAC,CAAC;QACtF,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAM,KAAK,GAAU,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,KAAK,CAAC;YACxD,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,IAAI,CAAE,cAAI;gBAC/C,IAAM,KAAK,GAAS,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oBACxC,OAAO,EAAE,4CAA4C;oBACrD,OAAO,EAAE,CAAC;4BACR,IAAI,EAAE,IAAI;4BACV,IAAI,EAAE,QAAQ;4BACd,OAAO,EAAE,cAAQ,KAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAC,CAAC;yBACtC,CAAC;iBACH,CAAC,CAAC;gBACH,KAAK,CAAC,OAAO,EAAE;YACjB,CAAC,EAAE,eAAK;gBACN,IAAM,UAAU,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oBACvC,OAAO,EAAE,KAAK,CAAC,OAAO;oBACtB,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;iBAC1C,CAAC,CAAC;gBACH,UAAU,CAAC,OAAO,EAAE,CAAC;YACvB,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAEH,wBAAC;AAAD,CAAC;AAnCY,iBAAiB;IAL7B,wEAAS,EAAE;IACX,wEAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;OACG;KACnC,CAAC;oJAI2B,CAA+C;QACvD,cAAwC;AA+B5D;SAnCY,iBAAiB,gB","file":"2.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ResetPasswordPage } from './reset-password';\n\n@NgModule({\n  declarations: [\n    ResetPasswordPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ResetPasswordPage),\n  ],\n})\nexport class ResetPasswordPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reset-password/reset-password.module.ts","import { FormControl } from '@angular/forms';\n\nexport class EmailValidator {\n  \n  static isValid(control: FormControl){\n    const re = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/.test(control.value);\n    \n    if (re){\n      return null;\n    }\n    \n    return {\n      \"invalidEmail\": true\n    };\n    \n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/validators/email.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, Alert, AlertController } from 'ionic-angular';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { AuthProvider } from '../../providers/auth/auth';\nimport { EmailValidator } from '../../validators/email';\n\n@IonicPage()\n@Component({\n  selector: 'page-reset-password',\n  templateUrl: 'reset-password.html',\n})\nexport class ResetPasswordPage {\n  public resetPasswordForm:FormGroup;\n\n  constructor(public navCtrl:NavController, public authProvider:AuthProvider, \n    public alertCtrl:AlertController, formBuilder:FormBuilder) {\n      this.resetPasswordForm = formBuilder.group({\n        email: ['', Validators.compose([Validators.required, EmailValidator.isValid])]\n      });\n  }\n\n  resetPassword():void {\n    if (!this.resetPasswordForm.valid){\n      console.log(`Form isn't valid yet, current value: ${this.resetPasswordForm.value}`);\n    } else {\n      const email:string = this.resetPasswordForm.value.email;\n      this.authProvider.resetPassword(email).then( user => {\n        const alert:Alert = this.alertCtrl.create({\n          message: \"Check your email for a password reset link\",\n          buttons: [{\n            text: \"Ok\",\n            role: 'cancel',\n            handler: () => { this.navCtrl.pop() }\n          }]\n        });\n        alert.present()\n      }, error => {\n        const errorAlert = this.alertCtrl.create({\n          message: error.message,\n          buttons: [{ text: \"Ok\", role: \"cancel\" }]\n        });\n        errorAlert.present();\n      });\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reset-password/reset-password.ts"],"sourceRoot":""}